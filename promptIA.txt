PROMPT COMPLETO DO PROJETO – CONTROLE DE CAMPEONATO DE FUTEBOL (Java + Swing + SQLite)
Quero desenvolver um sistema desktop em Java (OpenJDK 24.0.1) para controlar a pontuação e classificação de times participantes de um campeonato de futebol, com interface gráfica feita em Swing e banco de dados SQLite. A estrutura do projeto deve seguir uma arquitetura bem organizada, com pacotes separados para entidades, repositórios, serviços e interface.

FUNCIONALIDADES GERAIS:
Cadastro de Times
  Inserir, editar e remover times.
  Cada time possui: id, apelido, nome, pontos, gols marcados, gols sofridos.
Inserção de Jogos
  Registrar resultados de partidas entre dois times (apelidoTimeCasa, apelidoTimeVisitante, gols de cada um).
  O sistema deve atualizar os pontos, gols marcados e sofridos automaticamente.
Classificação do Campeonato
  Exibir ranking dos times com critérios de desempate:
    Pontos
    Saldo de gols
    Gols marcados
    Apelido (alfabético) como critério final

Persistência com SQLite
O banco de dados deve ser criado automaticamente, com verificação da existência do arquivo.
Deve conter uma tabela chamada "times" com colunas apropriadas para os dados dos times.
A conexão e o carregamento do driver JDBC devem ser tratados na camada de repositório base.

ESTRUTURA DE DIRETÓRIOS DO PROJETO:
config.bat
\build
\dist
\src
  Main.java
  \Entities
    JogoEntity.java            //representa um jogo com os atributos (apelidoTimeCasa, apelidoTimeVisitante, golsTimeCasa, golsTimeVisitante;
    TimeEntity.java            //representa um time com os atributos (id, apelido, nome, pontos, golsMarcados, golsSofridos)
  \Models
    TimeModel.java            //usando para representar um time com a sua posicao na classificacao geral com os atributos (id, posicao, apelido, nome, pontos, golsMarcados, golsSofridos)
  \Repositories
    SQLiteBaseRepository.java  // este serve para faciliar todo o uso do banco sqlite
    TimeRepository.java        // este serve para realizar um crud na tabela de times
  \Services
    CampeonatoService.java    //esta tem as regras de negocio para dos times e do campeonato, e tambem as regras para inserir um jogo 
  \Views
    FrmPrincipal.java       //esta eh a tela principal que ira sempre listar o rank, nela teremos os botoes de inserir/remover/editar um time, inserir um jogo. 
    DlgInserirJogo.java     //dialog para inserir um jogo do campeonato
    DlgTime.java            //dialog para inserir ou editar um jogo do campeonato 
 

ENTIDADES:
TimeEntity.java
  Campos: id, apelido, nome, pontos, golsMarcados, golsSofridos
  Método adicional: getSaldoGols()

JogoEntity.java
  Campos: apelidoTimeCasa, apelidoTimeVisitante, golsTimeCasa, golsTimeVisitante

REPOSITÓRIOS:
SQLiteBaseRepository.java
  Classe abstrata para conexão com SQLite.
  Verifica se o arquivo do banco de dados existe.
  Cria a tabela "times" automaticamente, se necessário.
  Carrega explicitamente o driver org.sqlite.JDBC.

TimeRepository.java
  CRUD completo: inserir, atualizar, buscarPorApelido, deletarPorApelido, listarTodos

SERVIÇOS:
CampeonatoService.java
  Métodos principais:
    inserirJogo(JogoEntity jogo): Atualiza os dados dos dois times conforme o resultado do jogo
    obterClassificacao(): Retorna a lista de times ordenada por pontos, saldo de gols, gols marcados e apelido
    reiniciarCampeonato(): Zera pontos, gols marcados e sofridos de todos os times
    inserirTime(TimeEntity time): Insere novo time se o apelido for único
    editarTime(TimeEntity timeAtualizado): Atualiza os dados mantendo pontuação
    removerTime(String apelido): Remove time do banco
    listarTimes(): Lista todos os times registrados

INTERFACE GRÁFICA SWING:
FrmPrincipal.java
  Tela principal que exibe o ranking dos times.
  Deve ter botões para: Inserir Time, Editar Time, Remover Time, Inserir Jogo

DlgTime.java
  Diálogo modal para cadastrar ou editar um time

DlgInserirJogo.java
  Diálogo modal para registrar o resultado de uma partida entre dois times existentes

DEPENDÊNCIA DO SQLITE:
  Inclua o driver JDBC do SQLite no classpath.

https://github.com/xerial/sqlite-jdbc
https://github.com/xerial/sqlite-jdbc/releases/download/3.49.1.0/sqlite-jdbc-3.49.1.0.jar

OBJETIVO FINAL:
  Um sistema desktop Java completo para gerenciamento de campeonatos de futebol, com dados persistentes em SQLite, regras de pontuação implementadas corretamente e interface gráfica amigável construída com Swing.
